name: Deploy to EC2
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: create env file
        run: |
          touch .env
          echo "${{ secrets.ENV_VARS }}" >> .env
      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: mkdir -p ~/srv/ubuntu

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: ~/srv/ubuntu/
          remote_host: ${{ secrets.HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.KEY }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        env:
          # 로그그룹 설정을 위함
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: AWS_SECRET_ACCESS_KEY,
          script: |
            # 로그그룹 설정을 위함
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export JWT_KEY_ADMIN_ACCESS=${{ secrets.JWT_KEY_ADMIN_ACCESS }}
            sh ~/srv/ubuntu/deploy.sh
            echo "start docker-compose up: ubuntu"
            sudo docker-compose -v
            cat ~/srv/ubuntu/.env
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.prod.yml pull
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.prod.yml --env-file ~/srv/ubuntu/.env up --build -d
